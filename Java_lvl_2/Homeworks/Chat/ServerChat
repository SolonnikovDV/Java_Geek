package lsn6_server.HomeWork;

import java.io.*;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Scanner;


public class ServerChat {

    private final String HOST = "localhost";
    private final int PORT = 8080;

    static Scanner scanner;

    public ServerChat() {

        // создаем расположение сервера
        try (ServerSocket server = new ServerSocket(8080)) {

            System.out.println("Server started.");

            // записываем внутрь try интерфейс ServerSocket - для того чтобы он автоматически закрывался сам при выходе из catch
            // это возможно, потому что ServerSocket является closeable интерфейсом
            try (
                    // создаем сокет на подключение клиента
                    Socket socket = server.accept();
                    // Ответ сервера на входящее подключение
                    BufferedWriter out = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));
                    // чтение сервером входящего потока от клинета/подклчюения
                    BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()))
            ) {

                System.out.println("Client connected");

                // прослушиваем в бесконечном цикле сообещение клиента
                new Thread(() -> {
                    while (true) {

                        if (in.equals("/exit")) {
                            break;
                        }
                        // чтение и отправка

                        try {
                            String incomingMSG = in.readLine();
                            System.out.println("Message from client: " + incomingMSG);

                        } catch (IOException e) {
                            e.printStackTrace();
                        }
                    }
                }).start();

                // выполнение потока сервера в бесконечно цикле
                while (true) {
                    Scanner scanner = new Scanner(System.in);
                    String responseMSG = scanner.nextLine();
                    System.out.println("Server send message: " + responseMSG);

                    try {
                        out.write(responseMSG);
                        out.newLine(); // перевод каретки на новую строку в консоли
                        out.flush(); // для отправки сообщения из буфера в консоль

                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }

            } catch (IOException e) {
                e.printStackTrace();
            }

            System.out.println("Client disconnected");

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        ServerChat serverChat = new ServerChat();
    }

}
