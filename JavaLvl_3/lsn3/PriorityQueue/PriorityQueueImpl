package lsn3.PriorityQueue;

public class PriorityQueueImpl implements PriorityQueue {

    private int[] queue;
    private int items;
    private int maxSize;

    public PriorityQueueImpl(int size) {
        this.queue = new int[size];
        this.items = 0;
        this.maxSize = size;
    }

    @Override
    public boolean isEmpty() {
        return (items == 0);
    }

    @Override
    public boolean isFull() {
        return (items == maxSize);
    }

    @Override
    public int size() {
        return items;
    }

    @Override
    public void insert(int element) { // вставлет элемент по возрастанию (сортирует)
        int i;
        if (items == 0) {
            queue[items] = element;
            items++;
        } else {
            for (i = items - 1; i >= 0; i--) {
                if (element > queue[i]) {
                    queue[i + 1] = queue[i];
                } else {
                    break;
                }
            }
            queue[i + 1] = element;
            items++;
        }

    }

    @Override
    public int remove() {

        return queue[--items];
    }

    @Override
    public int peek() {
        return queue[items - 1];
    }
}
