package lsn3.Stack;

public class Breakets {
    private String input;

    public Breakets(String input) {
        this.input = input;
    }

    public void check() {
        int size = input.length();
        StackImp st = new StackImp(size);
        for (int i = 0; i < size; i++) {
            char ch = input.charAt(i); // charAt - взять символ. Берем символ по индексу i
            switch (ch) {
                case '(':
                case '{':
                case '[':
                    st.push(ch);
                    break;
                case ')':
                case '}':
                case ']':
                    if (!st.isEmpty()) {
                        char chr = st.pop(); // если стек не пустой, берем элемент из верхушки стека
                        // обработка случая с ошибкой
                        if ((ch == ')' && chr != '(') ||
                            (ch == '}' && chr != '{') ||
                            (ch == ']' && chr != '[')) {
                            System.out.println("Ошибка в " + ch + " в элементе " + i);
                        }
                    } else {
                        System.out.println("Ошибка в " + ch + " в элементе " + i);
                    }
                    break;
                default:
                    break;
            }
        }
        if (!st.isEmpty()){
            System.out.println("Отсутствует правый сисвол");
        }
    }

}
